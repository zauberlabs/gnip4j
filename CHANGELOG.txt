### 2.2.2 (2024-02-06)
 * Breaking - drop support for old org.codehaus.jackson mappings

### 2.2.1 (2017-01-12)
 * #67 Add support for delete favorite and user withheld (dennislloydjr)

### 2.2.0 (2016-11-24)

 * remove PowertrackV1 support
   Can trigger compiling issues, but on December 1st 2016 the service won't
   be available any more.
 * #64: Rule is now exposing the new id property
 * Rule validation endpoint available (Fredrik Olsson)
 * Activity Model allow for deserialization of information about expanded URLs
   (Fredrik Olsson)
 * http-client maven module was removed (it was incomplete since December 2012)
 * Dependencies upgraded (Thanks Jamie Magee)
    * mockito from 2.0.2-beta to 2.2.5
    * netty (for mock server) upgraded from 3.2.6 to 3.10.6

### 2.1.0 (2016-10-17)

 * bugfix: avoid using default charset and user locale
 * feature: Compliance Firehose 2.0 by Dennis Lloyd Jr

  final AtomicInteger counter = new AtomicInteger();
  final DefaultGnipFacade x = DefaultGnipFacade.createPowertrackV2Compliance(
                              authentication, 1);
  final GnipStream stream = x.createPowertrackStream(String.class)
      .withAccount("foo")
      .withType("prod")
      .withUnmarshall(new ComplianceActivityUnmarshaller())
      .withObserver(new StreamNotificationAdapter<Activity>() {
          @Override
          public void notify(final Activity activity, final GnipStream stream) {
              System.out.println(activity);
              if (counter.incrementAndGet() >= 10) {
                  stream.close();
              }
          }
      })
      .build();
  stream.await();

### 2.0.0 (2016-10-12)

Depending of the features used, this release might not be binary compatible 
with previous releases. Recompilation of the client apps is adviced.

 * More entities in the Activity model implements Serializable
 * Activity model expanded to support more twitter  features (140plus 
 * characters, places, expanded_status, etc)
 * Consumers are able to process raw strings (usefull for native format)
 * Dependencies updated (junit, mockito, slf4, joda-time...)
 * Java 8 is required
 * Powertrack 2 support
 * removed Mule support
 * Ease Facade creation for Powertrack V1/V2

  Example of consuming a V2 Raw stream:
    final DefaultGnipFacade x = DefaultGnipFacade.createPowertrackV2(…);
    final GnipStream stream = x.createPowertrackStream(String.class)
        .withAccount("…")
        .withType("dev")
        .withUnmarshall(new StringUnmarshaller())
        .withObserver(new StreamNotificationAdapter<String>() {
            @Override
            public void notify(final String activity, final GnipStream stream) {
                System.out.println(activity);
            }
        })
        .build();
    stream.await();

  Contributors:
   - Brian Sloan (1):
   - David Kigel (4):
   - James Jory (2):
   - Josh Montague (1):
   - Juan F. Codagnone (67):
   - Kenneth Jorgensen (4):
   - Marcelo Turrin (17):
   - Pablo Diez (1):
   - mjmeyer (7):

### Gnip4j 1.1.1 (2013-08-08)

 * Bugfix: Rule encoding fix: when ASCII chars where encoded with default
 * charset instead of using utf-8
 * enhace: DefaultUriStrategy can be parameterized with the publisher
 * (twitter, tumblr, ...)
 * enhace: JRERemoteResourceProvider:  more verborragic error reporting

### Gnip4j 1.0

 * Updates to support the new API coming up on March 2012 ( not compatible
 * with previous API )
 * Missing property order "type" for Geo.java ( thanks simonwg )
 * cannot deserialize properly for the geo coordinates ( thanks simonwg )
 * remove support for Apache HttpClient 


### Gnip4j 0.2

 * Added UriStrategy to generate URI to connect to Gnip endpoint

### Gnip4j 0.1

 * Fix "Usage" documentation (contributed by Adrian Petrescu)
 * Added twitterTimeZone to Actor (contributed by Rob Stanley)
 * Added support for the activity.geo.coordinates (contributed by chouck)
 * Return klout_score in activity.gnip object (if Klout is enabled for your
 * Gnip account) (contributed by Adrian Petrescu)
 * Added support for fetching rules list from Gnip's REST API. (contributed by
 * Adrian Petrescu)
 * Typos and better base64 implementation (contributed by Adrian Petrescu)

### Gnip4j 0.0

Initial Release. Only the streaming API is supported.
